______________________________________________________________________________________________________________________________________
                                              Parameter Expansion 
                                                 ${variable}
                                       ===============================
__________________________________________________________________________________
1.Basic Parameter Expansion Syntax:

                ```bash
                name="Linux"
                echo "Hello, ${name}!"
                ```
                Output:
                ```
                Hello, Linux!
                ```
__________________________________________________________________________________
2.Default Value (`:-`):
      
                ```bash
                greeting=${name:-"World"}
                echo "Hello, ${greeting}!"
                ```
                Output (if `name` is unset):
                ```
                Hello, World!
                ```
                if `name` is unset, it will assign the defualt but temporary for this command only.
__________________________________________________________________________________
3.Assign Default Value (`:=`):
       
                ```bash
                echo "User: ${USER:=default_user}"
                echo "USER is now set to: $USER"
                ```
                if `USER` is unset, it will assign the defualt permenantly for this variable.
__________________________________________________________________________________
4.Error Message (`:?`):
       
                ```bash
                echo "Path: ${PATH:?PATH is not set}"
                ```
                Output (if `PATH` is unset):
                ```
                bash: PATH: PATH is not set
                ```
__________________________________________________________________________________
5.Use Alternative Value (`:+`):
       
                ```bash
                echo "Backup ${BACKUP_DIR:+enabled}"
                ```
                Output (if `BACKUP_DIR` is set):
                ```
                Backup enabled
                ```
                if `BACKUP_DIR` is set, it will assign the defualt but temporary for this command only.
__________________________________________________________________________________
6.Substring Extraction:
      
                ```bash
                str="HelloWorld"
                echo ${str:0:5}   Output: Hello
                echo ${str:5}     Output: World
                ```
__________________________________________________________________________________
7.String Length:
       
                ```bash
                str="Linux"
                echo "Length: ${#str}"
                ```
                Output:
                ```
                Length: 5
                ```
__________________________________________________________________________________
8.Substring Removal:
    -------------------------------------------------------------
    1.Remove Shortest Match from the Front (`*`)

                ```bash
                ${parameter*pattern}
                ```

                ```bash
                file="/home/user/document.txt"
                echo ${file/}   Output: home/user/document.txt
                ```
    -------------------------------------------------------------
    2.Remove Longest Match from the Front (`*`)

                ```bash
                ${parameter*pattern}
                ```

                ```bash
                echo ${file/}   Output: document.txt
                ```
    -------------------------------------------------------------
    3.Remove Shortest Match from the End (`%`)

                ```bash
                ${parameter%pattern}
                ```

                ```bash
                echo ${file%.}   Output: /home/user/document
                ```
    -------------------------------------------------------------
    4.Remove Longest Match from the End (`%%`)

                ```bash
                ${parameter%%pattern}
                ```

                ```bash
                echo ${file%%.}   Output: /home/user/document
                ```
    -------------------------------------------------------------
__________________________________________________________________________________
9.Search and Replace:
    -------------------------------------------------------------
    1.Replace First Match (`/`)

                ```bash
                ${parameter/pattern/replacement}
                ```

                ```bash
                str="Linux is great"
                echo ${str/is/was}   Output: Linux was great
                ```

    -------------------------------------------------------------
    2.Replace All Matches (`//`)

                ```bash
                ${parameter//pattern/replacement}
                ```

                ```bash
                echo ${str//is/was}   Output: Linux was great
                ```
    -------------------------------------------------------------
__________________________________________________________________________________
10.Uppercase and Lowercase Conversion:
    -------------------------------------------------------------
    1.Convert to Uppercase (`^^`)

                ```bash
                ${parameter^^}
                ```

                ```bash
                str="linux"
                echo ${str^^}   Output: LINUX
                ```
    -------------------------------------------------------------
    2.Convert to Lowercase (`,,`)

                ```bash
                ${parameter,,}
                ```


                ```bash
                str="LINUX"
                echo ${str,,}   Output: linux
                ```
    -------------------------------------------------------------
__________________________________________________________________________________
______________________________________________________________________________________________________________________________________