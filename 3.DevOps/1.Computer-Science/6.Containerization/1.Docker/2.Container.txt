________________________________________________________________________________________________________________________________________________________________
Container Management:
    (Write "docker container" to list all container commands)

    ############################################################################################################################################################
    ## my app container:
    docker container run -it --name <my-container> -h <my-hostName> <Image> <command'bash'> -c "/user/local/bootstrap.sh; bash" 
    // -c "/user/local/bootstrap.sh; bash  ------------>>>>> bootstrap.sh is a shell script used to bootstrap your services when you run your container.    
    ############################################################################################################################################################


    docker container run <image> <app/Command>                  : Runs a container from an image, 
                                                                 <app> it's the main app if exit from it the container will stop, 
                                                                 if i don't write it it will be the defualt in the image CMD.
    docker container run -d  <image>                                                         : Runs a container from an image in the detached mode 'background'.
    docker container run -it <image>  <Command>                                              : Runs a container from an image in the interactive mode.
    docker container run -it alpine:latest sleep 10

    docker container run -d  -p <hostport:containerport> --name <my-container> <Image>       : Run a container in detached mode with custom name.
    docker container run -d -p 8080:80 nginx

    docker container run   -it -p 8080:80 --name my-server nginx:latest bash/sh                 : Case 1 :
    docker container start -it <container_name-or-id>  bash/sh                                     if you exit from the container's shell in this case the container will stopped
    
    docker container exec -it <container_name-or-id> bash/sh                                    : Case 2 :
                                                                                                   Access the container's shell.
                                                                                                   if you exit from the container's shell in this case the container will not stopped   
    exit                                                                                        : exit from the container's shell


    docker container ps                                                                      : Lists running containers.
    docker container ls                                                                      : Lists running containers.
    docker container ps -a                                                                   : Lists all containers, This will show all containers, including stopped ones.
    docker container ls -a                                                                   : Lists all containers, This will show all containers, including stopped ones.
    docker image inspect <container_name-or-id>

    docker container logs  <container_name-or-id>                                            : Fetch the logs of a container.
    docker container stats <container_name-or-id>                                            : Display a live stream of container(s) resource usage statistics.
    docker container port  <container_name-or-id>                                            : List port mappings or a specific mapping for the container.
    docker container top   <container_name-or-id>                                            : Display the running processes of a container.

    docker image pull <image>
    docker container create -it --name <my-container> <ImageNameOrID>  bash/sh               : create   a container.
    docker container start  -i <container_name-or-id>                                          : running  a container.
    docker container restart <container_name-or-id>                                          : Restart one or more containers
    docker container stop    <container_name-or-id>                                          : Stopping a running container.
    docker container kill    <container_name-or-id>                                          : Kill one or more running containers.
    docker container rename  <current-name-or-id> <new-name>                                 : rename   a container.
    docker container rm      <container1_name-or-id>   <container2_name-or-id>               : Remove   a   stopped container.
    docker container prune                                                                   : Remove   all stopped containers.  

    docker container cp <yourDirectoryOrFilePath>  <container-name>:/<path-to-container>     : from outside the container to the container.
    docker container cp <container-name>:/<path-to-container> <yourDirectoryOrFilePath>      : from the container to outside.

    docker container commit <container_id_or_name> <new_image_name>:<tag>                    : Building an image from a running container:
    docker container commit abcd1234 myapp:v1  

    ---------------------------------------------------------------------------------------------------------------------------
    # Restart-Policies 'self-healing containers':
    --restart always                : docker container run --restart always         <image> <app/Command>
    --restart unless stopped        : docker container run --restart unless-stopped <image> <app/Command>
    --restart on-failure            : docker container run --restart on-failure     <image> <app/Command>
    ---------------------------------------------------------------------------------------------------------------------------
________________________________________________________________________________________________________________________________________________________________
